group_split(table_name, keep = FALSE)
test <- acs_place_subject_raw %>%
left_join(lookup_var %>% select(variable, table_name), by = "variable") %>%
group_split(table_name, .keep = FALSE)
View(test)
df <- acs_place_subject_raw %>%
left_join(lookup_var %>% select(variable, table_name), by = "variable") %>%
group_split(table_name, .keep = FALSE)
df_group_names <- group_keys(df)
df <- acs_place_subject_raw %>%
left_join(lookup_var %>% select(variable, table_name), by = "variable") %>%
group_by(table_name) %>%
group_split(.keep = FALSE)
df_group_names <- group_keys(df)
df <- acs_place_subject_raw %>%
left_join(lookup_var %>% select(variable, table_name), by = "variable") %>%
group_by(table_name) %>%
group_split(.keep = FALSE)
df <- acs_place_subject_raw %>%
left_join(lookup_var %>% select(variable, table_name), by = "variable") %>%
group_by(table_name)
df_group_names <- group_keys(df)
df_group_names
# Reconfigure for database purposes
df <- df %>%
group_map( ~{ .x %>%
pivot_wider(names_from = variable, values_from = c(estimate, moe)) },
.keep = FALSE)
View(df)
View(df_group_names)
df <- acs_place_subject_raw
geo_name <- "place"
# Group by table name
df <- acs_place_subject_raw %>%
left_join(lookup_var %>% select(variable, table_name), by = "variable") %>%
group_by(table_name)
# Get table names to rename list elements
df_group_names <- group_keys(df) %>%
mutate("table_name" = paste0(geo_name, "_", table_name))
# Reconfigure for database purposes
df <- df %>%
group_map( ~{ .x %>%
pivot_wider(names_from = variable, values_from = c(estimate, moe)) },
.keep = FALSE)
# Set names for list
df <- df %>%
setNames(group_name)
# Set names for list
df <- df %>%
setNames(df_group_names)
View(df)
# Group by table name
df <- acs_place_subject_raw %>%
left_join(lookup_var %>% select(variable, table_name), by = "variable") %>%
group_by(table_name)
# Get table names to rename list elements
df_group_names <- group_keys(df) %>%
mutate("table_name" = paste0(geo_name, "_", table_name))
# Reconfigure for database purposes
df <- df %>%
group_map( ~{ .x %>%
pivot_wider(names_from = variable, values_from = c(estimate, moe)) },
.keep = FALSE)
# Set names for list
df <- df %>%
setNames(df_group_names$table_name)
View(df_group_names)
View(df)
df <- acs_place_subject_raw
geo_name <- "place"
# Group by table name
df <- acs_place_subject_raw %>%
left_join(lookup_var %>% select(variable, table_name), by = "variable") %>%
group_by(table_name)
# Get table names to rename list elements
df_group_names <- group_keys(df) %>%
mutate("table_name" = paste0("acs_", geo_name, "_", table_name))
# Reconfigure for database purposes
df <- df %>%
group_map( ~{ .x %>%
pivot_wider(names_from = variable, values_from = c(estimate, moe)) },
.keep = FALSE)
# Set names for list
df <- df %>%
setNames(df_group_names$table_name)
rm(test)
df[1]
df[1][[1]]
df[[1]]
df[1]
names(df[1])
as.character(nrow(df[[1]]))
# Write to MongoDB
map(df,
.f = ~{
# Connect to MongoDB database/collection
mongo_conn <- mongo_connect(collection_name = names([.x]),
database_name = "ADA-PARC")
# Write to database
mongo_conn$drop()
mongo_conn$insert([[.x]])
# Message
msg <- paste0("Writing ", as.character(nrow([[.x]])),
" rows to ", names([.x]))
print(msg)
# Disconnect
rm(mongo_conn)
}
)
# Write to MongoDB
map(df,
.f = ~(
# Connect to MongoDB database/collection
mongo_conn <- mongo_connect(collection_name = names([.x]),
database_name = "ADA-PARC")
# Write to database
mongo_conn$drop()
mongo_conn$insert([[.x]])
# Message
msg <- paste0("Writing ", as.character(nrow([[.x]])),
" rows to ", names([.x]))
print(msg)
# Disconnect
rm(mongo_conn)
)
)
map(.x = df,
.f = ~(
# Connect to MongoDB database/collection
mongo_conn <- mongo_connect(collection_name = names([.x]),
database_name = "ADA-PARC")
# Write to database
mongo_conn$drop()
mongo_conn$insert([[.x]])
# Message
msg <- paste0("Writing ", as.character(nrow([[.x]])),
" rows to ", names([.x]))
print(msg)
# Disconnect
rm(mongo_conn)
)
)
map(.x = df,
.f = ~(
# Connect to MongoDB database/collection
mongo_conn <- mongo_connect(collection_name = names([.x]),
database_name = "ADA-PARC")
# Write to database
mongo_conn$drop()
mongo_conn$insert([[.x]])
# Message
msg <- paste0("Writing ", as.character(nrow([[.x]])),
" rows to ", names([.x]))
print(msg)
# Disconnect
rm(mongo_conn)
)
)
map(.x = df,
.f = ~{
# Connect to MongoDB database/collection
mongo_conn <- mongo_connect(collection_name = names([.x]),
database_name = "ADA-PARC")
# Write to database
mongo_conn$drop()
mongo_conn$insert([[.x]])
# Message
msg <- paste0("Writing ", as.character(nrow([[.x]])),
" rows to ", names([.x]))
print(msg)
# Disconnect
rm(mongo_conn)
}
)
df %>%
map( ~{
# Connect to MongoDB database/collection
mongo_conn <- mongo_connect(collection_name = names([.x]),
database_name = "ADA-PARC")
# Write to database
mongo_conn$drop()
mongo_conn$insert([[.x]])
# Message
msg <- paste0("Writing ", as.character(nrow([[.x]])),
" rows to ", names([.x]))
print(msg)
# Disconnect
rm(mongo_conn)
})
write_to_mongodb <- function(list) {
# Connect to MongoDB database/collection
mongo_conn <- mongo_connect(collection_name = names([list]),
database_name = "ADA-PARC")
# Write to database
mongo_conn$drop()
mongo_conn$insert([[list]])
# Message
msg <- paste0("Writing ", as.character(nrow([[list]])),
" rows to ", names([list]))
print(msg)
# Disconnect
rm(mongo_conn)
}
# Write to MongoDB function
walk(.x = df,
.f = ~{
# Connect to MongoDB database/collection
mongo_conn <- mongo_connect(collection_name = names([.x]),
database_name = "ADA-PARC")
# Write to database
mongo_conn$drop()
mongo_conn$insert([[.x]])
# Message
msg <- paste0("Writing ", as.character(nrow([[.x]])),
" rows to ", names([.x]))
print(msg)
# Disconnect
rm(mongo_conn)
}
)
write_to_mongo_db <- function(list_of_dfs) {
# Connect to MongoDB database/collection
mongo_conn <- mongo_connect(collection_name = names([list_of_dfs]),
database_name = "ADA-PARC")
# Write to database
mongo_conn$drop()
mongo_conn$insert([[list_of_dfs]])
# Message
msg <- paste0("Writing ", as.character(nrow([[list_of_dfs]])),
" rows to ", names([list_of_dfs]))
print(msg)
# Disconnect
rm(mongo_conn)
}
df <- acs_place_subject_raw
geo_name <- "place"
# Group by table name
df <- acs_place_subject_raw %>%
left_join(lookup_var %>% select(variable, table_name), by = "variable") %>%
group_by(table_name)
# Get table names to rename list elements
df_group_names <- group_keys(df) %>%
mutate("table_name" = paste0("acs_", geo_name, "_", table_name))
# Reconfigure for database purposes
df_list <- df %>%
group_map( ~{ .x %>%
pivot_wider(names_from = variable, values_from = c(estimate, moe)) },
.keep = FALSE)
# Set names for list
df_list <- df_list %>%
setNames(df_group_names$table_name)
# Write to MongoDB function
walk(.x = df_list,
.f = ~{
# Connect to MongoDB database/collection
mongo_conn <- mongo_connect(collection_name = names([.x]),
database_name = "ADA-PARC")
# Write to database
mongo_conn$drop()
mongo_conn$insert([[.x]])
# Message
msg <- paste0("Writing ", as.character(nrow([[.x]])),
" rows to ", names([.x]))
print(msg)
# Disconnect
rm(mongo_conn)
}
)
df_list %>%
walk(
~{ # Connect to MongoDB database/collection
mongo_conn <- mongo_connect(collection_name = names([.x]),
database_name = "ADA-PARC")
# Write to database
mongo_conn$drop()
mongo_conn$insert([[.x]])
# Message
msg <- paste0("Writing ", as.character(nrow([[.x]])),
" rows to ", names([.x]))
print(msg)
# Disconnect
rm(mongo_conn)
}
)
# Organize data into list of dfs and export
fun_write_by_geo_table <- function(df, geo_name) {
# Group by table name
df <- acs_place_subject_raw %>%
left_join(lookup_var %>% select(variable, table_name), by = "variable") %>%
group_by(table_name)
# Get table names to rename list elements
df_group_names <- group_keys(df) %>%
mutate("table_name" = paste0("acs_", geo_name, "_", table_name))
# Reconfigure for database purposes
df_list <- df %>%
group_map( ~{ .x %>%
pivot_wider(names_from = variable, values_from = c(estimate, moe)) },
.keep = FALSE)
# Set names for list
df_list <- df_list %>%
setNames(df_group_names$table_name)
return(df_list)
}
# Organize data into list of dfs and export
fun_write_by_geo_table <- function(df, geo_name) {
# Group by table name
df <- df %>%
left_join(lookup_var %>% select(variable, table_name), by = "variable") %>%
group_by(table_name)
# Get table names to rename list elements
df_group_names <- group_keys(df) %>%
mutate("table_name" = paste0("acs_", geo_name, "_", table_name))
# Reconfigure for database purposes
df_list <- df %>%
group_map( ~{ .x %>%
pivot_wider(names_from = variable, values_from = c(estimate, moe)) },
.keep = FALSE)
# Set names for list
df_list <- df_list %>%
setNames(df_group_names$table_name)
return(df_list)
}
df_list <- fun_write_by_geo_table(acs_place_subject_raw, "place")
df_list %>%
walk(
{ # Connect to MongoDB database/collection
mongo_conn <- mongo_connect(collection_name = names([.x]),
database_name = "ADA-PARC")
# Write to database
mongo_conn$drop()
mongo_conn$insert([[.x]])
# Message
msg <- paste0("Writing ", as.character(nrow([[.x]])),
" rows to ", names([.x]))
print(msg)
# Disconnect
rm(mongo_conn)
}
)
# Write to MongoDB function
df_list %>%
walk(~{ # Connect to MongoDB database/collection
mongo_conn <- mongo_connect(collection_name = names([.x]),
database_name = "ADA-PARC")
# Write to database
mongo_conn$drop()
mongo_conn$insert([[.x]])
# Message
msg <- paste0("Writing ", as.character(nrow([[.x]])),
" rows to ", names([.x]))
print(msg)
# Disconnect
rm(mongo_conn)
}
)
df_list %>%
walk(
~{ # Connect to MongoDB database/collection
mongo_conn <- mongo_connect(collection_name = names(.x[]),
database_name = "ADA-PARC")
# Write to database
mongo_conn$drop()
mongo_conn$insert(.x[[]])
# Message
msg <- paste0("Writing ", as.character(nrow(.x[[]])),
" rows to ", names(.x[]))
print(msg)
# Disconnect
rm(mongo_conn)
}
)
# Write to MongoDB function
df_list %>%
walk(
~{ # Connect to MongoDB database/collection
mongo_conn <- mongo_connect(collection_name = names(.x),
database_name = "ADA-PARC")
# Write to database
mongo_conn$drop()
mongo_conn$insert(.x)
# Message
msg <- paste0("Writing ", as.character(nrow(.x)),
" rows to ", names(.x))
print(msg)
# Disconnect
rm(mongo_conn)
}
)
names(df_list)
df_list[1]
names(df_list[1])
df_list[1] %>%
map(
~{ # Connect to MongoDB database/collection
mongo_conn <- mongo_connect(collection_name = names(.x),
database_name = "ADA-PARC")
# Write to database
mongo_conn$drop()
mongo_conn$insert(.x)
# Message
msg <- paste0("Writing ", as.character(nrow(.x)),
" rows to ", names(.x))
print(msg)
# Disconnect
rm(mongo_conn)
}
)
df_list[1] %>%
map(
~{
print(.x)
#
# # Connect to MongoDB database/collection
# mongo_conn <- mongo_connect(collection_name = names(.x),
#                             database_name = "ADA-PARC")
#
# # Write to database
# mongo_conn$drop()
# mongo_conn$insert(.x)
#
# # Message
# msg <- paste0("Writing ", as.character(nrow(.x)),
#               " rows to ", names(.x))
# print(msg)
#
# # Disconnect
# rm(mongo_conn)
}
)
df_list[1] %>%
map2(.x = .,
.y = names(.),
~{
print(.y)
#
# # Connect to MongoDB database/collection
# mongo_conn <- mongo_connect(collection_name = names(.x),
#                             database_name = "ADA-PARC")
#
# # Write to database
# mongo_conn$drop()
# mongo_conn$insert(.x)
#
# # Message
# msg <- paste0("Writing ", as.character(nrow(.x)),
#               " rows to ", names(.x))
# print(msg)
#
# # Disconnect
# rm(mongo_conn)
}
)
map2(.x = df_list,
.y = names(df_list),
.f = ~{
# Connect to MongoDB database/collection
mongo_conn <- mongo_connect(collection_name = .y,
database_name = "ADA-PARC")
# Write to database
mongo_conn$drop()
mongo_conn$insert(.x)
# Message
msg <- paste0("Writing ", as.character(nrow(.x)),
" rows to ", .y)
print(msg)
# Disconnect
rm(mongo_conn)
}
)
# Organize data into list of dfs and export
fun_write_by_geo_table <- function(df, geo_name) {
# Group by table name
df <- df %>%
left_join(lookup_var %>% select(variable, table_name), by = "variable") %>%
group_by(table_name)
# Get table names to rename list elements
df_group_names <- group_keys(df) %>%
mutate("table_name" = paste0("acs_", geo_name, "_", table_name))
# Reconfigure for database purposes
df_list <- df %>%
group_map( ~{ .x %>%
pivot_wider(names_from = variable, values_from = c(estimate, moe)) },
.keep = FALSE)
# Set names for list
df_list <- df_list %>%
setNames(df_group_names$table_name)
# Write to MongoDB function
map2(.x = df_list,
.y = names(df_list),
.f = ~{
# Connect to MongoDB database/collection
mongo_conn <- mongo_connect(collection_name = .y,
database_name = "ADA-PARC")
# Write to database
mongo_conn$drop()
mongo_conn$insert(.x)
# Message
msg <- paste0("Writing ", as.character(nrow(.x)),
" rows to ", .y)
print(msg)
# Disconnect
rm(mongo_conn)
}
)
}
# Remove temporary tables
rm(acs_place_subject_vars, acs_tract_subject_vars)
rm(geo_name)
# Places
fun_write_by_geo_table(df = acs_place_subject_raw, geo = "place")
# Tracts
fun_write_by_geo_table(df = acs_tract_subject_raw, geo = "tract")
