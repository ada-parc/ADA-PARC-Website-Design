demo_gen_data %>%
ggplot(aes(x = 1, y = 1, fill = percent_of_total_population_with_a_disability)) +
geom_tile() +
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white",
family = "Lato") +
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid1") +
theme(plot.background = element_rect(colour = "white"),
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, fill = percent_of_total_population_with_a_disability)) +
geom_tile() +
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") +
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid1") +
theme(plot.background = element_rect(colour = "white"),
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, fill = percent_of_total_population_with_a_disability)) +
geom_tile() +
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") +
facet_geo(facets = ~ state_abbv) +
theme(plot.background = element_rect(colour = "white"),
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, fill = percent_of_total_population_with_a_disability)) +
geom_tile() +
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") +
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid2") +
theme(plot.background = element_rect(colour = "white"),
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
# Tile mapping using geofacet
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, # A tile map without x or y axis changes will fill out the tile for the state
fill = percent_of_total_population_with_a_disability)) + # Selected variable
geom_tile() + # Imports x and y values
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") + # Adds percentage to the center of the tile
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid2") +
scale_color_continuous(direction = -1) +
theme(plot.background = element_rect(colour = "white"), # Removes all of the grid elements that we don't need
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
?scale_fill_gradient
# Tile mapping using geofacet
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, # A tile map without x or y axis changes will fill out the tile for the state
fill = percent_of_total_population_with_a_disability)) + # Selected variable
geom_tile() + # Imports x and y values
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") + # Adds percentage to the center of the tile
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid2") +
scale_fill_brewer("reds") +
theme(plot.background = element_rect(colour = "white"), # Removes all of the grid elements that we don't need
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
# Tile mapping using geofacet
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, # A tile map without x or y axis changes will fill out the tile for the state
fill = percent_of_total_population_with_a_disability)) + # Selected variable
geom_tile() + # Imports x and y values
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") + # Adds percentage to the center of the tile
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid2") +
scale_fill_brewer() +
theme(plot.background = element_rect(colour = "white"), # Removes all of the grid elements that we don't need
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
# Tile mapping using geofacet
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, # A tile map without x or y axis changes will fill out the tile for the state
fill = percent_of_total_population_with_a_disability)) + # Selected variable
scale_fill_brewer() +
geom_tile() + # Imports x and y values
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") + # Adds percentage to the center of the tile
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid2") +
theme(plot.background = element_rect(colour = "white"), # Removes all of the grid elements that we don't need
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
str(demo_gen_data$percent_of_total_population_with_a_disability)
# Tile mapping using geofacet
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, # A tile map without x or y axis changes will fill out the tile for the state
fill = factor(percent_of_total_population_with_a_disability))) + # Selected variable
scale_fill_brewer() +
geom_tile() + # Imports x and y values
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") + # Adds percentage to the center of the tile
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid2") +
theme(plot.background = element_rect(colour = "white"), # Removes all of the grid elements that we don't need
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
# Tile mapping using geofacet
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, # A tile map without x or y axis changes will fill out the tile for the state
fill = percent_of_total_population_with_a_disability)) + # Selected variable
scale_fill_brewer() +
geom_tile() + # Imports x and y values
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") + # Adds percentage to the center of the tile
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid2") +
theme(plot.background = element_rect(colour = "white"), # Removes all of the grid elements that we don't need
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
# Tile mapping using geofacet
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, # A tile map without x or y axis changes will fill out the tile for the state
fill = -percent_of_total_population_with_a_disability)) + # Selected variable
geom_tile() + # Imports x and y values
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") + # Adds percentage to the center of the tile
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid2") +
theme(plot.background = element_rect(colour = "white"), # Removes all of the grid elements that we don't need
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
# Tile mapping using geofacet
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, # A tile map without x or y axis changes will fill out the tile for the state
fill = -percent_of_total_population_with_a_disability)) + # Selected variable
scale_fill_discrete("reds") +
geom_tile() + # Imports x and y values
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") + # Adds percentage to the center of the tile
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid2") +
theme(plot.background = element_rect(colour = "white"), # Removes all of the grid elements that we don't need
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
# Tile mapping using geofacet
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, # A tile map without x or y axis changes will fill out the tile for the state
fill = -percent_of_total_population_with_a_disability)) + # Selected variable
scale_fill_continuous("reds") +
geom_tile() + # Imports x and y values
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") + # Adds percentage to the center of the tile
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid2") +
theme(plot.background = element_rect(colour = "white"), # Removes all of the grid elements that we don't need
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
# Tile mapping using geofacet
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, # A tile map without x or y axis changes will fill out the tile for the state
fill = -percent_of_total_population_with_a_disability)) + # Selected variable
scale_fill_continuous(palette = "reds") +
geom_tile() + # Imports x and y values
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") + # Adds percentage to the center of the tile
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid2") +
theme(plot.background = element_rect(colour = "white"), # Removes all of the grid elements that we don't need
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
?scale_fill_continuous
# Tile mapping using geofacet
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, # A tile map without x or y axis changes will fill out the tile for the state
fill = -percent_of_total_population_with_a_disability)) + # Selected variable
scale_fill_continuous(type = "gradient") +
geom_tile() + # Imports x and y values
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") + # Adds percentage to the center of the tile
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid2") +
theme(plot.background = element_rect(colour = "white"), # Removes all of the grid elements that we don't need
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
# Tile mapping using geofacet
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, # A tile map without x or y axis changes will fill out the tile for the state
fill = -percent_of_total_population_with_a_disability)) + # Selected variable
scale_fill_continuous(type = "gradient") +
scale_fill_brewer(palette = 2) +
geom_tile() + # Imports x and y values
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") + # Adds percentage to the center of the tile
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid2") +
theme(plot.background = element_rect(colour = "white"), # Removes all of the grid elements that we don't need
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
# Tile mapping using geofacet
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, # A tile map without x or y axis changes will fill out the tile for the state
fill = -percent_of_total_population_with_a_disability)) + # Selected variable
scale_fill_continuous(type = "gradient") +
geom_tile() + # Imports x and y values
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") + # Adds percentage to the center of the tile
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid2") +
theme(plot.background = element_rect(colour = "white"), # Removes all of the grid elements that we don't need
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
# Tile mapping using geofacet
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, # A tile map without x or y axis changes will fill out the tile for the state
fill = -percent_of_total_population_with_a_disability)) + # Selected variable
scale_fill_gradient(low = "yellow", high = "red") +
geom_tile() + # Imports x and y values
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") + # Adds percentage to the center of the tile
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid2") +
theme(plot.background = element_rect(colour = "white"), # Removes all of the grid elements that we don't need
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
# Tile mapping using geofacet
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, # A tile map without x or y axis changes will fill out the tile for the state
fill = percent_of_total_population_with_a_disability)) + # Selected variable
scale_fill_gradient(low = "yellow", high = "red") +
geom_tile() + # Imports x and y values
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") + # Adds percentage to the center of the tile
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid2") +
theme(plot.background = element_rect(colour = "white"), # Removes all of the grid elements that we don't need
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
# Tile mapping using geofacet
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, # A tile map without x or y axis changes will fill out the tile for the state
fill = percent_of_total_population_with_a_disability)) + # Selected variable
scale_fill_gradient(low = "#fee8c8", high = "e34a33") +
geom_tile() + # Imports x and y values
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") + # Adds percentage to the center of the tile
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid2") +
theme(plot.background = element_rect(colour = "white"), # Removes all of the grid elements that we don't need
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
# Tile mapping using geofacet
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, # A tile map without x or y axis changes will fill out the tile for the state
fill = percent_of_total_population_with_a_disability)) + # Selected variable
scale_fill_gradient(low = "#fee8c8", high = "#e34a33") +
geom_tile() + # Imports x and y values
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") + # Adds percentage to the center of the tile
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid2") +
theme(plot.background = element_rect(colour = "white"), # Removes all of the grid elements that we don't need
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
# Tile mapping using geofacet
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, # A tile map without x or y axis changes will fill out the tile for the state
fill = percent_of_total_population_with_a_disability)) + # Selected variable
scale_fill_gradient(low = "#fdbb84", high = "#e34a33") +
geom_tile() + # Imports x and y values
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") + # Adds percentage to the center of the tile
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid2") +
theme(plot.background = element_rect(colour = "white"), # Removes all of the grid elements that we don't need
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
# Tile mapping using geofacet
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, # A tile map without x or y axis changes will fill out the tile for the state
fill = percent_of_total_population_with_a_disability)) + # Selected variable
scale_fill_viridis_c() +
geom_tile() + # Imports x and y values
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") + # Adds percentage to the center of the tile
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid2") +
theme(plot.background = element_rect(colour = "white"), # Removes all of the grid elements that we don't need
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
# Tile mapping using geofacet
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, # A tile map without x or y axis changes will fill out the tile for the state
fill = percent_of_total_population_with_a_disability)) + # Selected variable
geom_tile() + # Imports x and y values
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") + # Adds percentage to the center of the tile
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid2") +
theme(plot.background = element_rect(colour = "white"), # Removes all of the grid elements that we don't need
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
# Tile mapping using geofacet
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, # A tile map without x or y axis changes will fill out the tile for the state
fill = -percent_of_total_population_with_a_disability)) + # Selected variable
geom_tile() + # Imports x and y values
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") + # Adds percentage to the center of the tile
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid2") +
theme(plot.background = element_rect(colour = "white"), # Removes all of the grid elements that we don't need
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
# Tile mapping using geofacet
demo_gen_data %>%
ggplot(aes(x = 1, y = 1, # A tile map without x or y axis changes will fill out the tile for the state
fill = -percent_of_total_population_with_a_disability)) + # Selected variable
geom_tile() + # Imports x and y values
labs(x = "", y = "") +
geom_text(aes(label = paste0(as.character(percent_of_total_population_with_a_disability), "%")),
color = "white") + # Adds percentage to the center of the tile
facet_geo(facets = ~ state_abbv, grid = "us_state_with_DC_PR_grid2") +
theme(plot.background = element_rect(colour = "white"), # Removes all of the grid elements that we don't need
panel.grid = element_blank(),
panel.grid.major = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank(),
panel.spacing = unit(0L, "pt"),
legend.position = "none",
strip.text.x = element_text(size = 9L))
install.packages(c("backports", "brio", "fastmap", "htmltools", "knitr", "rappdirs", "Rcpp", "reprex", "rgdal", "sass", "stars", "tinytex", "tmaptools", "withr"))
# Libraries
library(tidyverse);library(readxl)
library(tigris);library(sf);library(janitor)
library(tidycensus);library(viridis);library(tmap)
library(RPostgres);library(RPostgreSQL);library(DBI)
library(geojsonsf);library(mongolite)
library(shiny); library(shinyWidgets)
# Set working document, options
setwd(here::here())
options(scipen = 999, dplyr.summarise.inform = FALSE, tigris_use_cache = TRUE)
knitr::opts_chunk$set(echo = FALSE)
# Load API keys and database connection information
source("secret.R", local = TRUE)
census_api_key(api_key_census)
census_api_key(api_key_census, install = TRUE)
most_populated <- get_estimates(geography = "place",
year = 2019,
product = "population",
geometry = FALSE,
output = "wide") %>%
arrange(desc(POP))
c(2005:2019)
c(2005:2019) %>% arrange(desc(.))
desc(c(2005:2019))
c(2005:2019)) %>% desc(.)
c(2005:2019) %>% desc(.)
c(2005:2019) %>% sort(., decreasing = TRUE)
states_acs_vars_ref <- load_variables(year = 2019,
dataset = "acs5/subject",
cache = TRUE)
View(most_populated)
View(states_acs_vars_ref)
states_acs_vars_ref <- load_variables(year = 2019,
dataset = "acs5/subject",
cache = TRUE) %>%
mutate(table_name = gsub( "_.*$", "", name),
label = gsub("!!", "; ", label),
shiny_input_label = paste0(table_name, ": ", str_to_title(concept)))
View(states_acs_vars_ref)
states_acs_vars_ref <- load_variables(year = 2019,
dataset = "acs5/subject",
cache = TRUE) %>%
filter(!is.na(concept)) %>%
mutate(table_name = gsub( "_.*$", "", name),
label = gsub("!!", "; ", label),
shiny_input_label = paste0(table_name, ": ", str_to_title(concept)))
View(states_acs_vars_ref)
test <- states_acs_vars_ref %>%
tabyl(shiny_input_label)
View(test)
states_acs_vars_ref %>% unique(shiny_input_label, table_name)
states_acs_vars_ref %>% distinct(shiny_input_label, table_name)
states_acs_tables %>% filter(str_detect(name, pattern = "(^S181(0|1)_*)|(^S26(01A|02)_*)"))
