filter(is.na(city) == FALSE) %>%
select("state_name" = state, "state_abbv" = abbrev, city,
pwd, total_population, contains("percent")) %>%  # This is clearner than listing out every variable
mutate_if(is.numeric, round, 1)
# ====================
# Setup
# ====================
# Packages
library(tidyverse); library(readxl); library(openxlsx); library(summarytools); library(janitor);
library(sf); library(urbnmapr); library(leaflet); library(leaflet.extras);
library(htmltools); library(shiny); library(shinyWidgets); library(flexdashboard);
library(colourpicker); library(DT); library(highcharter);
library(scales); library(hrbrthemes); library(ggthemes)
# Must install urbnmapr via GitHUb if is not already installed
# install.packages("devtools")
# devtools::install_github("UrbanInstitute/urbnmapr")
# ====================
# Import data
# ====================
# Set database path
db_path <- "February 2020 update 2018 ACS/2.20.20DatabaseACS2018.final.xlsx"
# Demographics
demographics <- read_excel(path = db_path,
sheet = "Demographics",
.name_repair = make_clean_names,
skip = 2) %>%
remove_empty(c("rows", "cols")) %>%
rename("abbrev" = state_abbreviation) %>%
mutate(across(-c(state:city), as.numeric))
# Community Living
community_living <- read_excel(path = db_path,
sheet = "Community Living",
.name_repair = make_clean_names,
skip = 2) %>%
remove_empty(c("rows", "cols")) %>%
mutate(across(-c(state:abbrev), as.numeric))
# Community Participation
community_participation <- read_excel(path = db_path,
sheet = "CommunityParticipation",
.name_repair = make_clean_names,
skip = 3) %>%
remove_empty(c("rows", "cols")) %>%
mutate(across(-c(state:city), as.numeric))
# Work and Economic
work_economic <- read_excel(path = db_path,
sheet = "WorkEconomic",
.name_repair = make_clean_names,
skip = 3) %>%
remove_empty(c("rows", "cols")) %>%
mutate(across(-c(state:city), as.numeric))
# Read in spatial data
states_sf <- get_urbn_map(map = "states", sf = TRUE)
demo_metro_data <- demographics %>%
filter(is.na(city) == FALSE) %>%
select("state_name" = state, "state_abbv" = abbrev, city,
pwd, total_population, contains("percent")) %>%  # This is clearner than listing out every variable
mutate_if(is.numeric, round, 1)
demo_metro_data %>%
rename("percent_pwd" = percent_of_total_population_with_a_disability,
"total_pop" = total_population) %>%
mutate(percent_pwd = percent(percent_pwd, scale = 1, accuracy = 0.1),
pwd = comma(pwd),
total_pop = comma(total_pop)) %>% tibble::view()
demo_metro_data %>%
rename("percent_pwd" = percent_of_total_population_with_a_disability,
"total_pop" = total_population) %>%
mutate(percent_pwd = percent(percent_pwd, scale = 1, accuracy = 0.1),
pwd = comma(pwd),
total_pop = comma(total_pop)) %>% names()
demo_metro_data %>%
rename("percent_pwd" = percent_of_total_population_with_a_disability,
"total_pop" = total_population) %>%
mutate(percent_pwd = percent(percent_pwd, scale = 1, accuracy = 0.1),
pwd = comma(pwd),
total_pop = comma(total_pop)) %>%
ggplot() +
geom_col()
# ====================
# Setup
# ====================
# Packages
library(tidyverse); library(readxl); library(openxlsx); library(summarytools); library(janitor);
library(sf); library(urbnmapr); library(leaflet); library(leaflet.extras);
library(htmltools); library(shiny); library(shinyWidgets); library(flexdashboard);
library(colourpicker); library(DT); library(highcharter);
library(scales); library(hrbrthemes); library(ggthemes)
# Must install urbnmapr via GitHUb if is not already installed
# install.packages("devtools")
# devtools::install_github("UrbanInstitute/urbnmapr")
# ====================
# Import data
# ====================
# Set database path
db_path <- "February 2020 update 2018 ACS/2.20.20DatabaseACS2018.final.xlsx"
# Demographics
demographics <- read_excel(path = db_path,
sheet = "Demographics",
.name_repair = make_clean_names,
skip = 2) %>%
remove_empty(c("rows", "cols")) %>%
rename("abbrev" = state_abbreviation) %>%
mutate(across(-c(state:city), as.numeric))
# Community Living
community_living <- read_excel(path = db_path,
sheet = "Community Living",
.name_repair = make_clean_names,
skip = 2) %>%
remove_empty(c("rows", "cols")) %>%
mutate(across(-c(state:abbrev), as.numeric))
# Community Participation
community_participation <- read_excel(path = db_path,
sheet = "CommunityParticipation",
.name_repair = make_clean_names,
skip = 3) %>%
remove_empty(c("rows", "cols")) %>%
mutate(across(-c(state:city), as.numeric))
# Work and Economic
work_economic <- read_excel(path = db_path,
sheet = "WorkEconomic",
.name_repair = make_clean_names,
skip = 3) %>%
remove_empty(c("rows", "cols")) %>%
mutate(across(-c(state:city), as.numeric))
# Read in spatial data
states_sf <- get_urbn_map(map = "states", sf = TRUE)
demo_metro_data <- demographics %>%
filter(is.na(city) == FALSE) %>%
select("state_name" = state, "state_abbv" = abbrev, city,
pwd, total_population, contains("percent")) %>%  # This is cleaner than listing out every variable
mutate_if(is.numeric, round, 1)
?contains
demo_metro_data %>%
filter(contains(c("Albuquerque", "Anchorage"), vars = city)) %>%
view()
demo_metro_data %>%
filter(c("Albuquerque", "Anchorage") %in% city) %>%
view()
demo_metro_data %>%
filter(c("Albuquerque", "Anchorage")) %>%
view()
demo_metro_data %>%
# filter(c("Albuquerque", "Anchorage")) %>%
view()
demo_metro_data %>% view()
demo_metro_data %>%
filter(c("Albuquerque", "Anchorage")) %>%
tibble::view()
demo_metro_data %>%
# filter(c("Albuquerque", "Anchorage")) %>%
tibble::view()
demo_metro_data %>%
filter(contains(c("Albuquerque", "Anchorage"))) %>%
tibble::view()
demo_metro_data %>%
filter(c("Albuquerque", "Anchorage") %in% city) %>%
tibble::view()
demo_metro_data %>%
filter(metros %in% city) %>%
tibble::view()
metros <- c("Albuquerque")
demo_metro_data %>%
filter(metros %in% city) %>%
tibble::view()
metros <- c("Albuquerque")
demo_metro_data %>%
filter(city %in% metros) %>%
tibble::view()
metros <- c("Albuquerque", "Anchorage")
demo_metro_data %>%
filter(city %in% metros) %>%
tibble::view()
metros <- c("Albuquerque", "Anchorage")
demo_metro_data %>%
mutate(full = paste(city, ",", state_abbv)) %>%
select(full, city, pwd, total_population, percent_of_total_population_with_a_disability, var_select()) %>%
filter(city %in% metros) %>%
rename("percent_pwd" = percent_of_total_population_with_a_disability,
"total_pop" = total_population) %>%
mutate(percent_pwd = percent(percent_pwd, scale = 1, accuracy = 0.1),
pwd = comma(pwd),
total_pop = comma(total_pop)) %>%
tibble:view()
var_select <- "percent_people_18_64_with_a_disability"
demo_metro_data %>%
demo_metro_data %>%
mutate(full = paste(city, ",", state_abbv)) %>%
select(full, city, pwd, total_population, var_select) %>%
filter(city %in% metros) %>%
rename("percent_pwd" = percent_of_total_population_with_a_disability,
"total_pop" = total_population) %>%
mutate(percent_pwd = percent(percent_pwd, scale = 1, accuracy = 0.1),
pwd = comma(pwd),
total_pop = comma(total_pop)) %>%
tibble:view()
demo_metro_data %>%
mutate(full = paste(city, ",", state_abbv)) %>%
select(full, city, pwd, total_population, sym(var_select)) %>%
filter(city %in% metros) %>%
rename("percent_pwd" = percent_of_total_population_with_a_disability,
"total_pop" = total_population) %>%
mutate(percent_pwd = percent(percent_pwd, scale = 1, accuracy = 0.1),
pwd = comma(pwd),
total_pop = comma(total_pop)) %>%
tibble:view()
demo_metro_data %>%
mutate(full = paste(city, ",", state_abbv)) %>%
select(full, city, pwd, total_population, sym(var_select)) %>%
filter(city %in% metros) %>%
rename("percent_pwd" = pwd / total_population,
"total_pop" = total_population) %>%
mutate(percent_pwd = percent(percent_pwd, scale = 1, accuracy = 0.1),
pwd = comma(pwd),
total_pop = comma(total_pop)) %>%
tibble:view()
demo_metro_data %>%
mutate(full = paste(city, ",", state_abbv)) %>%
select(full, city, pwd, total_population, sym(var_select)) %>%
filter(city %in% metros) %>%
rename("total_pop" = total_population) %>%
mutate(percent_pwd = percent(percent_pwd, scale = 1, accuracy = 0.1),
pwd = comma(pwd),
total_pop = comma(total_pop)) %>%
tibble:view()
demo_metro_data %>%
mutate(full = paste(city, ",", state_abbv)) %>%
select(full, city, pwd, total_population, sym(var_select)) %>%
filter(city %in% metros) %>%
rename("total_pop" = total_population) %>%
mutate(percent_pwd = percent((pwd/total_population), scale = 1, accuracy = 0.1),
pwd = comma(pwd),
total_pop = comma(total_pop)) %>%
tibble:view()
demo_metro_data %>%
mutate(full = paste(city, ",", state_abbv)) %>%
select(full, city, pwd, total_population, sym(var_select)) %>%
filter(city %in% metros) %>%
rename("total_pop" = total_population) %>%
mutate(percent_pwd = percent((pwd/total_pop), scale = 1, accuracy = 0.1),
pwd = comma(pwd),
total_pop = comma(total_pop)) %>%
tibble:view()
?sym
sym(var_select)
demo_metro_data %>%
mutate(full = paste(city, ",", state_abbv)) %>%
select(full, city, pwd, total_population, sym(var_select)) #%>%
demo_metro_data %>%
mutate(full = paste(city, ",", state_abbv)) %>%
select(full, city, pwd, total_population, sym(var_select)) %>%
filter(city %in% metros) #%>%
metros <- c("Albuquerque", "Anchorage")
var_select <- "percent_people_18_64_with_a_disability"
# Set database path
db_path <- "February 2020 update 2018 ACS/2.20.20DatabaseACS2018.final.xlsx"
# Demographics
demographics <- read_excel(path = db_path,
sheet = "Demographics",
.name_repair = make_clean_names,
skip = 2) %>%
remove_empty(c("rows", "cols")) %>%
rename("abbrev" = state_abbreviation) %>%
mutate(across(-c(state:city), as.numeric))
library(tidyverse); library(readxl); library(openxlsx); library(summarytools); library(janitor);
library(sf); library(urbnmapr); library(leaflet); library(leaflet.extras);
library(htmltools); library(shiny); library(shinyWidgets); library(flexdashboard);
library(colourpicker); library(DT); library(highcharter);
library(scales); library(hrbrthemes); library(ggthemes)
# Set database path
db_path <- "February 2020 update 2018 ACS/2.20.20DatabaseACS2018.final.xlsx"
# Demographics
demographics <- read_excel(path = db_path,
sheet = "Demographics",
.name_repair = make_clean_names,
skip = 2) %>%
remove_empty(c("rows", "cols")) %>%
rename("abbrev" = state_abbreviation) %>%
mutate(across(-c(state:city), as.numeric))
# City dataa
demo_metro_data <- demographics %>%
filter(is.na(city) == FALSE) %>%
select("state_name" = state, "state_abbv" = abbrev, city,
percent_of_total_population_with_a_disability, pwd, total_population) %>%
mutate(percent_of_total_population_with_a_disability =
round(percent_of_total_population_with_a_disability, 1))
demo_metro_data %>%
mutate(full = paste(city, ",", state_abbv)) %>%
select(full, city, state_abbv, pwd, total_population, sym(var_select)) %>%
filter(city %in% metros) %>%
rename("total_pop" = total_population) %>%
mutate(percent_pwd = percent((pwd/total_pop), scale = 1, accuracy = 0.1),
pwd = comma(pwd),
total_pop = comma(total_pop)) %>%
tibble:view()
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, var_select()) %>%
rename("City" = full) %>%
filter(City %in% metro_select()) %>%
tibble:view()
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, var_select) %>%
rename("City" = full) %>%
filter(City %in% metro_select) %>%
tibble:view()
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, sym(var_select)) %>%
rename("City" = full) %>%
filter(City %in% metro_select) %>%
tibble:view()
# City dataa
demo_metro_data <- demographics %>%
filter(is.na(city) == FALSE) %>%
select("state_name" = state, "state_abbv" = abbrev, city,
percent_of_total_population_with_a_disability, pwd, total_population, everything()) %>%
mutate(percent_of_total_population_with_a_disability =
round(percent_of_total_population_with_a_disability, 1))
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, sym(var_select)) %>%
rename("City" = full) %>%
filter(City %in% metro_select) %>%
tibble:view()
metro_select <- c("Albuquerque", "Anchorage")
var_select <- "percent_people_18_64_with_a_disability"
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, sym(var_select)) %>%
rename("City" = full) %>%
filter(City %in% metro_select) %>%
tibble:view()
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, var_select) %>%
rename("City" = full) %>%
filter(City %in% metro_select) %>%
tibble:view()
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, var_select) %>%
rename("City" = full) %>%
filter(City %in% metro_select)# %>%
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, sym(var_select)) %>%
rename("City" = full) %>%
filter(City %in% metro_select)# %>%
metro_select <- c("Albuquerque, NM", "Anchorage, AK")
var_select <- "percent_people_18_64_with_a_disability"
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, sym(var_select)) %>%
rename("City" = full) %>%
filter(City %in% metro_select)# %>%
metro_select <- c("Albuquerque, NM", "Anchorage, AK")
var_select <- c("pwd", "total_population","percent_people_18_64_with_a_disability")
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, sym(var_select)) %>%
rename("City" = full) %>%
filter(City %in% metro_select)# %>%
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, var_select) %>%
rename("City" = full) %>%
filter(City %in% metro_select)# %>%
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, var_select) %>%
rename("City" = full) %>%
filter(City %in% metro_select) %>%
ggplot(aes(x = City, y = var_select[1])) %>%
geom_cols()
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, var_select) %>%
rename("City" = full) %>%
filter(City %in% metro_select) %>%
ggplot(aes(x = City, y = var_select[1])) %>%
geom_col()
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, var_select) %>%
rename("City" = full) %>%
filter(City %in% metro_select) %>%
ggplot(aes(x = City, y = var_select[1])) +
geom_col()
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, var_select) %>%
rename("City" = full) %>%
filter(City %in% metro_select) %>%
ggplot(aes(x = City, y = var_select[1:2])) +
geom_col()
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, var_select) %>%
rename("City" = full) %>%
filter(City %in% metro_select) %>%
ggplot(aes(x = City, y = var_select[1])) +
geom_col() +
coord_flip()
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, var_select) %>%
rename("City" = full) %>%
filter(City %in% metro_select) %>%
ggplot(aes(x = City, y = var_select[1])) +
geom_col() +
coord_flip() +
geom_label(y = sym(var_select))
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, var_select) %>%
rename("City" = full) %>%
filter(City %in% metro_select) %>%
ggplot(aes(x = City, y = var_select[1])) +
geom_col() +
coord_flip() +
geom_label(y = var_select[1]))
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, var_select) %>%
rename("City" = full) %>%
filter(City %in% metro_select) %>%
ggplot(aes(x = City, y = var_select[1])) +
geom_col() +
coord_flip() +
geom_label(y = var_select[1])
?geom_label
library(tidyverse); library(readxl); library(openxlsx); library(summarytools); library(janitor);
library(sf); library(urbnmapr); library(leaflet); library(leaflet.extras);
library(htmltools); library(shiny); library(shinyWidgets); library(flexdashboard);
library(colourpicker); library(DT); library(highcharter);
library(scales); library(hrbrthemes); library(ggthemes)
# Set database path
db_path <- "February 2020 update 2018 ACS/2.20.20DatabaseACS2018.final.xlsx"
# Demographics
demographics <- read_excel(path = db_path,
sheet = "Demographics",
.name_repair = make_clean_names,
skip = 2) %>%
remove_empty(c("rows", "cols")) %>%
rename("abbrev" = state_abbreviation) %>%
mutate(across(-c(state:city), as.numeric))
# City dataa
demo_metro_data <- demographics %>%
filter(is.na(city) == FALSE) %>%
select("state_name" = state, "state_abbv" = abbrev, city,
percent_of_total_population_with_a_disability, pwd, total_population, everything()) %>%
mutate(percent_of_total_population_with_a_disability =
round(percent_of_total_population_with_a_disability, 1))
# demo_gen_data %>%
#   leaflet() %>%
### Testing out the selectize - ggplot conversio in the by Metro tab
metro_select <- c("Albuquerque, NM", "Anchorage, AK")
var_select <- c("pwd", "total_population","percent_people_18_64_with_a_disability")
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, var_select) %>%
rename("City" = full) %>%
filter(City %in% metro_select) %>%
ggplot(aes(x = City, y = .[,2])) +
geom_bar()
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, var_select) %>%
rename("City" = full) %>%
filter(City %in% metro_select) %>%
ggplot(aes(x = City, y = .[,2])) +
geom_col()
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, var_select) %>%
rename("City" = full) %>%
filter(City %in% metro_select) %>%
ggplot(aes(x = City, y = var_select[1])) +
geom_col()
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, var_select) %>%
rename("City" = full) %>%
filter(City %in% metro_select) %>%
ggplot(aes(x = City, y = sym(var_select))) +
geom_col()
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, var_select) %>%
rename("City" = full) %>%
filter(City %in% metro_select) %>%
ggplot(aes(x = City, y = sym(var_select[1]))) +
geom_col()
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, var_select) %>%
rename("City" = full) %>%
filter(City %in% metro_select) %>%
ggplot(aes(x = City, y = var_select)) +
geom_col()
demo_metro_data %>%
mutate(full = paste0(city, ", ", state_abbv)) %>%
select(full, var_select) %>%
rename("City" = full) %>%
filter(City %in% metro_select) %>%
ggplot(aes(x = City, y = var_select[1])) +
geom_col()
View(demo_metro_data)
library(tidyverse)
str_to_title("percent_pwd_female")
str_to_sentence("percent_pwd_female")
str_to_title(gsub("_", " ", "percent_pwd_female"))
